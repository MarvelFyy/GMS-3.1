<Window
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GreeManagmentSystem"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:FluentWPF="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF" 
        xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
        xmlns:local1="clr-namespace:GreeManagmentSystem.Views" x:Name="window" x:Class="GreeManagmentSystem.Views.ShellView"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="格力空调管理系统 V2.0 BETA" Height="650" Width="950" 
        WindowStartupLocation="CenterScreen" MouseDown="AcrylicWindow_MouseDown" 
        AllowsTransparency="True"
        WindowStyle="None" ResizeMode="CanResizeWithGrip" MaxWidth="{DynamicResource {x:Static SystemParameters.WorkArea}}" MaxHeight="{DynamicResource {x:Static SystemParameters.WorkArea}}" 
        WindowState="Maximized" BorderThickness="0"
         >
    <Window.Resources>

        <!--ShakeContent-->


        <!--Banner-->
        <Storyboard x:Key="ShrinkBanner">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Banner">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="EnlargeBanner">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Banner">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.01" Value="0.6"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--Close Menu-->
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="176"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="40">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <!--Open Menu-->
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="40"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="176">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--GridMenu-->
        <Storyboard x:Key="ChangeColor">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).Color" Storyboard.TargetName="GridMenu">
                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                <EasingColorKeyFrame KeyTime="0:0:0.01" Value="WhiteSmoke"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="RestoreColor">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).Color" Storyboard.TargetName="GridMenu">
                <EasingColorKeyFrame KeyTime="0" Value="WhiteSmoke"/>
                <EasingColorKeyFrame KeyTime="0:0:0.01" Value="White"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>


        <!--关闭按钮-->
        <ControlTemplate x:Key="ButtonCloseControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="red"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFF1707A"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--普通按钮-->
        <ControlTemplate x:Key="GeneralControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFF7F7F7"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="White"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Storyboard x:Key="ContentShake"/>

        <!--PackIcon-->
        <ControlTemplate x:Key="PackIcon" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Width="40" Height="40">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Rectangle Fill="#FFCB362F" HorizontalAlignment="Left" Height="5" Margin="0" RadiusY="0" RadiusX="0" VerticalAlignment="Top" Width="27.5"/>
                    <Rectangle Fill="#FFFBE509" HorizontalAlignment="Left" Height="5" RadiusY="0" RadiusX="0" VerticalAlignment="Top" Width="27.5" Margin="0,10,0,0"/>
                    <Rectangle Fill="#FF4F4FE6" HorizontalAlignment="Left" Height="5" RadiusY="0" RadiusX="0" VerticalAlignment="Top" Width="27.5" Margin="0,20,0,0"/>
                </Grid>

            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFACACAC"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFE0E0E0"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
        </Style>

    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonDown" SourceName="ButtonClose">
            <ResumeStoryboard BeginStoryboardName="CloseMenu_BeginStoryboard"/>
            <ResumeStoryboard BeginStoryboardName="ShrinkBanner_BeginStoryboard"/>
            <BeginStoryboard x:Name="ShrinkBanner_BeginStoryboard" Storyboard="{StaticResource ShrinkBanner}"/>
        </EventTrigger>
    </Window.Triggers>

    <!--网格布局-->

    <!--网格布局-->

    <!--网格布局-->

    <Grid x:Name="MainGrid" >
        <!--定义行-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--顶部-->
        <Grid Grid.Row="0" Height="60" Background="#FF5E72C0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="1"/>
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2">
                <Button x:Name="Minimize" Width="45" Height="30" Content="─" Foreground="White" BorderThickness="0" Background="Transparent" Click="Minimize_Click" Template="{DynamicResource GeneralControlTemplate}"/>
                <Button x:Name="Maximize" Width="45" Height="30" Content="☐" Foreground="White" BorderThickness="0" Background="Transparent" Click="Maximize_Click" Template="{DynamicResource GeneralControlTemplate}"/>
                <Button x:Name="CloseThis" Width="45" Height="30" Content="✕" Foreground="White" BorderThickness="0" Background="Transparent" Click="CloseThis_Click" Template="{DynamicResource ButtonCloseControlTemplate}"/>
            </StackPanel>
            <ProgressBar IsIndeterminate="True" Height="1" VerticalAlignment="Top" Opacity="0.5" Grid.Row="1" Background="Red" />
            <TextBlock  Text="{Binding CenterTitle, ElementName=window}"  HorizontalAlignment="Center" Height="20"  FontSize="16"  TextAlignment="Center" Foreground="White" TextWrapping="Wrap"  VerticalAlignment="Center" Width="145" FontFamily="Arial Black"/>
        </Grid>

        <!--左导航栏-->
        <Grid Grid.Row="1">
            <!--定义列-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid x:Name="GridMenu" Grid.Column="0" Width="176"  HorizontalAlignment="Left"  Background="White" RenderTransformOrigin="0.5,0.5">
                <!--Menu-->
                <StackPanel Orientation="Horizontal" >

                    <StackPanel>
                        <TextBlock x:Name="Banner" Text="通用空调管理系统 V2.1.2"  Opacity="0.6" FontWeight="Bold" FontSize="14" Margin="9 15" Style="{x:Null}"/>


                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="ButtonClose" Style="{x:Null}" Background="Transparent" BorderThickness="0" Click="ButtonClose_Click" Template="{DynamicResource PackIcon}" Width="40">
                                <materialDesign:PackIcon x:Name="packIcon" Kind="HamburgerMenu" Width="40" Height="40" />
                            </Button>
                            <materialDesign:RatingBar VerticalAlignment="Center" Value="4" Foreground="#60CEF4" Margin="5 0 0 0"/>
                        </StackPanel>

                        <RadioButton  x:Name="Total" Style="{DynamicResource RadioButtonStyle}" Click="Total_Click" >
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Buffer"  Width="25" Height="25" Foreground="#B0A8A7" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock  Text="仓储总览" Margin="10" FontSize="20" FontFamily="Arial Black" VerticalAlignment="Center" 
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}" />
                            </StackPanel>
                        </RadioButton>

                        <RadioButton x:Name="Order" Style="{DynamicResource RadioButtonStyle}" Click="Order_Click">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="LorryCheck" Width="25" Height="25" Foreground="#FFF08033" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock  Text="订货中心" Margin="10" FontSize="20" FontFamily="Arial Black" VerticalAlignment="Center" 
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}" />
                            </StackPanel>
                        </RadioButton>

                        <RadioButton x:Name="Stock" Style="{DynamicResource RadioButtonStyle}" Click="Stock_Click" >
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="BarcodeScanner" Width="25" Height="25" Foreground="Green" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock  Text="库存管理" Margin="10" FontSize="20" FontFamily="Arial Black" VerticalAlignment="Center" 
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}" />
                            </StackPanel>
                        </RadioButton>

                        <RadioButton x:Name="Sale" Style="{DynamicResource RadioButtonStyle}" Click="Sale_Click">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Shopping" Width="25" Height="25" Foreground="#FFD41515" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock  Text="销售订单" Margin="10" FontSize="20" FontFamily="Arial Black" VerticalAlignment="Center"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}" />
                            </StackPanel>
                        </RadioButton>

                        <RadioButton x:Name="Install" Style="{DynamicResource RadioButtonStyle}" Click="Install_Click">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Worker" Width="25" Height="25" Foreground="#FF0069C1" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock  Text="售后服务" Margin="10" FontSize="20" FontFamily="Arial Black" VerticalAlignment="Center"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type RadioButton}}}" />
                            </StackPanel>
                        </RadioButton>
                    </StackPanel>

                    <ProgressBar Orientation="Vertical" Height="1" IsIndeterminate="True" Opacity="0.5" Background="Red" Foreground="Red"/>
                </StackPanel>

            </Grid>

            <Grid Grid.Column="1" Grid.Row="1" x:Name="WindowRight">
                <!-- mainFrame区域 -->
                <Frame x:Name="mainFrame"  NavigationUIVisibility="Hidden" Source="\User\Pages\Total.xaml" />
            </Grid>

        </Grid>


    </Grid>



</Window>
